#!/usr/bin/env node
import { execSync } from "child_process";
import { fileURLToPath } from "url";
import path from "path";
import fs from "fs";

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const templatePath = path.join(__dirname, "../template");
const targetPath = process.cwd();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
function copyTemplate(src, dest) {
  if (!fs.existsSync(dest)) {
    fs.mkdirSync(dest, { recursive: true });
  }

  const files = fs.readdirSync(src);

  for (const file of files) {
    const srcFile = path.join(src, file);
    const destFile = path.join(dest, file);

    if (fs.statSync(srcFile).isDirectory()) {
      copyTemplate(srcFile, destFile);
    } else {
      fs.copyFileSync(srcFile, destFile);
    }
  }
}

// –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã —à–∞–±–ª–æ–Ω–∞
copyTemplate(templatePath, targetPath);

// –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º `gitignore` –≤ `.gitignore`
const gitignorePath = path.join(targetPath, "gitignore");
const correctGitignorePath = path.join(targetPath, ".gitignore");

if (fs.existsSync(gitignorePath)) {
  fs.renameSync(gitignorePath, correctGitignorePath);
}

console.log("‚úÖ –®–∞–±–ª–æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...");

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
execSync("npm install", { stdio: "inherit" });

console.log("üöÄ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤! –ó–∞–ø—É—Å—Ç–∏ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π:");
console.log("npm run dev");
